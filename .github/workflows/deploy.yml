name: Deploy FastAPI

on:
  push:
    branches:
      - main
    tags:
      - "v*"

permissions:
  contents: read
  id-token: write

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    outputs:
      image-uri: ${{ steps.build.outputs.image-uri }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          set -euo pipefail
          IMAGE_URI="${REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          docker build -t "${IMAGE_URI}" -f api/Dockerfile .
          docker push "${IMAGE_URI}"
          echo "image-uri=${IMAGE_URI}" >> "${GITHUB_OUTPUT}"

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      id-token: write
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      K8S_NAMESPACE: ${{ vars.K8S_NAMESPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Set up kubeconfig
        run: |
          set -euo pipefail
          mkdir -p "${HOME}/.kube"
          if echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode >/tmp/kubeconfig 2>/dev/null; then
            mv /tmp/kubeconfig "${HOME}/.kube/config"
          else
            echo "${{ secrets.KUBE_CONFIG }}" > "${HOME}/.kube/config"
          fi
          chmod 600 "${HOME}/.kube/config"

      - name: Update deployment image
        env:
          IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}
        run: |
          set -euo pipefail
          NAMESPACE="${K8S_NAMESPACE:-default}"
          kubectl set image deployment/fastapi fastapi="${IMAGE_URI}" --namespace "${NAMESPACE}"
          kubectl rollout status deployment/fastapi --namespace "${NAMESPACE}" --timeout=5m
