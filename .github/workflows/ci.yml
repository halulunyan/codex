name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.7.1"

jobs:
  lint-test:
    name: Python Lint & Test
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      POETRY_VIRTUALENVS_IN_PROJECT: "true"
      POETRY_NO_INTERACTION: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          cache-dependency-path: |
            **/poetry.lock

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Lint
        run: poetry run ruff check api

      - name: Test
        run: poetry run pytest api/tests

  terraform:
    name: Terraform Validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: infra/terraform/environments/dev
    env:
      TF_IN_AUTOMATION: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.6"
          terraform_wrapper: false

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  kubernetes:
    name: Kubernetes Manifests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "5.1.0"

      - name: Validate base manifests
        run: kustomize build infra/kubernetes/base

      - name: Validate overlays
        run: |
          kustomize build infra/kubernetes/environments/dev
          kustomize build infra/kubernetes/environments/stage
          kustomize build infra/kubernetes/environments/prod

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs:
      - lint-test
      - terraform
      - kubernetes
    if: ${{ always() }}
    steps:
      - name: Report job results
        run: |
          echo "Python Lint & Test: ${{ needs['lint-test'].result }}"
          echo "Terraform Validate: ${{ needs.terraform.result }}"
          echo "Kubernetes Manifests: ${{ needs.kubernetes.result }}"
