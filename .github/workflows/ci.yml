name: Python Lint & Test

on:
  push:
    branches: [ "main" ]
    paths:
      - "api/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "api/**"
      - ".github/workflows/ci.yml"
  workflow_dispatch:

jobs:
  python:
    name: Python Lint & Test
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Poetry を先に入れる
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.3"
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Poetry / pip キャッシュ + プロジェクト .venv をロックファイルでキー化
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            api/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('api/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Lint
        run: poetry run ruff check .

      - name: Test
        run: poetry run pytest -q
